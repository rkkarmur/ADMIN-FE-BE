generator client {
    provider = "prisma-client-js"
    output   = "../src/generated/prisma"
}

datasource db {
    provider = "mongodb"
    url      = env("DATABASE_URL")
}

type RolesPermission {
    id     String   @map("_id") @db.ObjectId
    access String[]
    name   String
}

type SettingCompanyDetails {
    address      String
    company_name String
    contact_no   Int
    email        String
    jbw_sign     String
    logo         String
}

type SettingEstimateInvoiceDetails {
    estimate_note String
    invoice_note  String
    sales_tax     Int
}

type SettingStorageContractWording {
    inside  SettingStorageContractWordingInside
    outside SettingStorageContractWordingOutside
}

type SettingStorageContractWordingInside {
    contract_description     String
    contract_pdf_description String
    created_at               DateTime @db.Date
    title                    String
    updated_at               DateTime @db.Date
}

type SettingStorageContractWordingOutside {
    contract_description     String
    contract_pdf_description String
    created_at               DateTime @db.Date
    title                    String
    updated_at               DateTime @db.Date
}

type SettingStorageInvoice {
    first_invoice_due   Int
    second_invoice_date SettingStorageInvoiceSecondInvoiceDate
    second_invoice_due  SettingStorageInvoiceSecondInvoiceDue
}

type SettingStorageInvoiceSecondInvoiceDate {
    day   Int
    month String
}

type SettingStorageInvoiceSecondInvoiceDue {
    day   Int
    month String
}

type UserLocation {
    /// Could not determine type: the field only had null or empty values in the sample set.
    address Json?
    /// Could not determine type: the field only had null or empty values in the sample set.
    city    Json?
    /// Could not determine type: the field only had null or empty values in the sample set.
    lat     Json?
    /// Could not determine type: the field only had null or empty values in the sample set.
    long    Json?
    /// Could not determine type: the field only had null or empty values in the sample set.
    state   Json?
    /// Could not determine type: the field only had null or empty values in the sample set.
    zip     Json?
}

type UserNotification_ {
    email Int
    web   Int
}

model AssociatedRecords {
    id String @id @default(auto()) @map("_id") @db.ObjectId
}

model Auth {
    id String @id @default(auto()) @map("_id") @db.ObjectId
}

model Boat {
    id String @id @default(auto()) @map("_id") @db.ObjectId
}

model BoatComponents {
    id      String @id @default(auto()) @map("_id") @db.ObjectId
    /// Field referred in an index, but found no data to define the type.
    item_no Json?  @unique(map: "item_no_1")
}

model BoatContract {
    id              String @id @default(auto()) @map("_id") @db.ObjectId
    /// Field referred in an index, but found no data to define the type.
    business        Json?
    /// Field referred in an index, but found no data to define the type.
    contract_number Json?

    @@unique([contract_number, business], map: "contract_number_1_business_1")
}

model BoatContractPayment {
    id String @id @default(auto()) @map("_id") @db.ObjectId
}

model BoatContractService {
    id String @id @default(auto()) @map("_id") @db.ObjectId
}

model BoatDinghy {
    id String @id @default(auto()) @map("_id") @db.ObjectId
}

model BoatItem {
    id String @id @default(auto()) @map("_id") @db.ObjectId
}

model BoatItemCategory {
    id String @id @default(auto()) @map("_id") @db.ObjectId
}

model BoatMake {
    id String @id @default(auto()) @map("_id") @db.ObjectId
}

model BoatMast {
    id String @id @default(auto()) @map("_id") @db.ObjectId
}

model BoatPreviousNames {
    id String @id @default(auto()) @map("_id") @db.ObjectId
}

model Business {
    id                  String   @id @default(auto()) @map("_id") @db.ObjectId
    v                   Int      @map("__v")
    created_at          DateTime @db.Date
    is_active           Int
    logo                String
    name                String   @unique(map: "name_1")
    /// Could not determine type: the field only had null or empty values in the sample set.
    sync_quickbook_date Json?
    updated_at          DateTime @db.Date
}

model Checklists {
    id String @id @default(auto()) @map("_id") @db.ObjectId
}

model ChecklistsResponse {
    id String @id @default(auto()) @map("_id") @db.ObjectId
}

model ClockIns {
    id String @id @default(auto()) @map("_id") @db.ObjectId
}

model CompanyAssetServiceRecord {
    id String @id @default(auto()) @map("_id") @db.ObjectId
}

model CompanyCellPhone {
    id String @id @default(auto()) @map("_id") @db.ObjectId
}

model CompanyVehicle {
    id String @id @default(auto()) @map("_id") @db.ObjectId
}

model ConditionReports {
    id String @id @default(auto()) @map("_id") @db.ObjectId
}

model Contacts {
    id String @id @default(auto()) @map("_id") @db.ObjectId
}

model CustomerAndVendor {
    id         String @id @default(auto()) @map("_id") @db.ObjectId
    /// Field referred in an index, but found no data to define the type.
    email      Json?
    /// Field referred in an index, but found no data to define the type.
    first_name Json?
    /// Field referred in an index, but found no data to define the type.
    is_active  Json?
    /// Field referred in an index, but found no data to define the type.
    last_name  Json?
    /// Field referred in an index, but found no data to define the type.
    type       Json?

    @@index([first_name, last_name, email, type, is_active], map: "first_name_1_last_name_1_email_1_type_1_is_active_1")
}

model Department {
    id String @id @default(auto()) @map("_id") @db.ObjectId
}

model DinghyMake {
    id String @id @default(auto()) @map("_id") @db.ObjectId
}

model EmailTemplates {
    id                String   @id @default(auto()) @map("_id") @db.ObjectId
    v                 Int      @map("__v")
    business          String   @db.ObjectId
    code              String
    created_at        DateTime @db.Date
    def_html_template String
    /// Could not determine type: the field only had null or empty values in the sample set.
    deleted_at        Json?
    html_template     String
    is_active         Int
    stake_holder      String
    title             String
    updated_at        DateTime @db.Date

    @@unique([code, stake_holder, business], map: "code_1_stake_holder_1_business_1")
}

model EmployeeBenefits {
    id String @id @default(auto()) @map("_id") @db.ObjectId
}

model EmployeeDocument {
    id String @id @default(auto()) @map("_id") @db.ObjectId
}

model EmployeeIRA {
    id String @id @default(auto()) @map("_id") @db.ObjectId
}

model EmployeeInsurance {
    id String @id @default(auto()) @map("_id") @db.ObjectId
}

model EmployeePaidTimeOff {
    id String @id @default(auto()) @map("_id") @db.ObjectId
}

model Equipment {
    id String @id @default(auto()) @map("_id") @db.ObjectId
}

model Estimate {
    id String @id @default(auto()) @map("_id") @db.ObjectId
}

model EstimatePayment {
    id String @id @default(auto()) @map("_id") @db.ObjectId
}

model EstimateService {
    id String @id @default(auto()) @map("_id") @db.ObjectId
}

model EstimateServiceConsumable {
    id String @id @default(auto()) @map("_id") @db.ObjectId
}

model EstimateServiceMaterial {
    id String @id @default(auto()) @map("_id") @db.ObjectId
}

model EstimateServiceTask {
    id String @id @default(auto()) @map("_id") @db.ObjectId
}

model EstimateV2 {
    id String @id @default(auto()) @map("_id") @db.ObjectId
}

model FAQ {
    id String @id @default(auto()) @map("_id") @db.ObjectId
}

model HaulCompany {
    id String @id @default(auto()) @map("_id") @db.ObjectId
}

model HaulLocation {
    id String @id @default(auto()) @map("_id") @db.ObjectId
}

model HaulPlan {
    id String @id @default(auto()) @map("_id") @db.ObjectId
}

model InternalJobCodes {
    id         String   @id @default(auto()) @map("_id") @db.ObjectId
    v          Int      @map("__v")
    business   String   @db.ObjectId
    created_at DateTime @db.Date
    is_active  Int
    name       String
    updated_at DateTime @db.Date
}

model Inventory {
    id String @id @default(auto()) @map("_id") @db.ObjectId
}

model InventoryCategory {
    id String @id @default(auto()) @map("_id") @db.ObjectId
}

model InventoryStorageLocations {
    id String @id @default(auto()) @map("_id") @db.ObjectId
}

model Invoice {
    id String @id @default(auto()) @map("_id") @db.ObjectId
}

model InvoiceService {
    id String @id @default(auto()) @map("_id") @db.ObjectId
}

model Issues {
    id String @id @default(auto()) @map("_id") @db.ObjectId
}

model Leads {
    id          String @id @default(auto()) @map("_id") @db.ObjectId
    /// Field referred in an index, but found no data to define the type.
    boat_id     Json?
    /// Field referred in an index, but found no data to define the type.
    business    Json?
    /// Field referred in an index, but found no data to define the type.
    customer_id Json?
    /// Field referred in an index, but found no data to define the type.
    lead_number Json?

    @@unique([lead_number, business], map: "lead_number_1_business_1")
    @@index([customer_id, boat_id, business], map: "customer_id_1_boat_id_1_business_1")
}

model MasterCategory {
    id         String   @id @default(auto()) @map("_id") @db.ObjectId
    v          Int      @map("__v")
    business   String   @db.ObjectId
    created_at DateTime @db.Date
    /// Could not determine type: the field only had null or empty values in the sample set.
    deleted_at Json?
    is_active  Int
    is_store   Int
    name       String
    slug       String
    updated_at DateTime @db.Date

    @@unique([name, slug, business], map: "name_1_slug_1_business_1")
}

model MasterCompanyAsset {
    id           String @id @default(auto()) @map("_id") @db.ObjectId
    /// Field referred in an index, but found no data to define the type.
    asset_number Json?
    /// Field referred in an index, but found no data to define the type.
    business     Json?
    /// Field referred in an index, but found no data to define the type.
    name         Json?

    @@unique([name, asset_number, business], map: "name_1_asset_number_1_business_1")
}

model MasterCompanyAssetCategory {
    id String @id @default(auto()) @map("_id") @db.ObjectId
}

model MasterConsumables {
    id String @id @default(auto()) @map("_id") @db.ObjectId
}

model MasterMaterial {
    id String @id @default(auto()) @map("_id") @db.ObjectId
}

model MasterServices {
    id          String   @id @default(auto()) @map("_id") @db.ObjectId
    v           Int      @map("__v")
    business    String   @db.ObjectId
    category_id String   @db.ObjectId
    /// Could not determine type: the field only had null or empty values in the sample set.
    consumable  Json?
    created_at  DateTime @db.Date
    /// Could not determine type: the field only had null or empty values in the sample set.
    deleted_at  Json?
    fix_amount  Int?
    is_active   Int
    is_fix      Int
    is_per_size Int
    /// Could not determine type: the field only had null or empty values in the sample set.
    material    Json?
    name        String
    slug        String
    /// Could not determine type: the field only had null or empty values in the sample set.
    task        Json?
    tax         Int
    unit        String?
    /// Multiple data types found: Float: 40%, Int: 60% out of 384 sampled entries
    unit_cost   Json?
    updated_at  DateTime @db.Date

    @@unique([name, slug, business], map: "name_1_slug_1_business_1")
}

model MasterTasks {
    id String @id @default(auto()) @map("_id") @db.ObjectId
}

model PhoneCarrier {
    id String @id @default(auto()) @map("_id") @db.ObjectId
}

model Positions {
    id String @id @default(auto()) @map("_id") @db.ObjectId
}

model QuickBookAuth {
    id String @id @default(auto()) @map("_id") @db.ObjectId
}

model QuickBookInvoice {
    id String @id @default(auto()) @map("_id") @db.ObjectId
}

model QuickBookInvoiceSetting {
    id String @id @default(auto()) @map("_id") @db.ObjectId
}

model QuickbookAccountType {
    id String @id @default(auto()) @map("_id") @db.ObjectId
}

model Roles {
    id         String            @id @default(auto()) @map("_id") @db.ObjectId
    v          Int               @map("__v")
    business   String            @db.ObjectId
    created_at DateTime          @db.Date
    /// Could not determine type: the field only had null or empty values in the sample set.
    created_by Json?
    /// Could not determine type: the field only had null or empty values in the sample set.
    deleted_at Json?
    is_active  Int
    name       String
    permission RolesPermission[]
    slug       String
    updated_at DateTime          @db.Date
    /// Could not determine type: the field only had null or empty values in the sample set.
    updated_by Json?

    @@unique([name, business], map: "name_1_business_1")
}

model SerialNumbers {
    id String @id @default(auto()) @map("_id") @db.ObjectId
}

model Setting {
    id                       String                        @id @default(auto()) @map("_id") @db.ObjectId
    v                        Int                           @map("__v")
    business                 String                        @db.ObjectId
    company_details          SettingCompanyDetails
    estimate_invoice_details SettingEstimateInvoiceDetails
    setting_id               String
    storage_contract_wording SettingStorageContractWording
    storage_invoice          SettingStorageInvoice

    @@unique([setting_id, business], map: "setting_id_1_business_1")
}

model ShippingCompanies {
    id String @id @default(auto()) @map("_id") @db.ObjectId
}

model StandingRigging {
    id String @id @default(auto()) @map("_id") @db.ObjectId
}

model StaticPage {
    id          String   @id @default(auto()) @map("_id") @db.ObjectId
    v           Int      @map("__v")
    business    String   @db.ObjectId
    created_at  DateTime @db.Date
    /// Could not determine type: the field only had null or empty values in the sample set.
    deleted_at  Json?
    description String
    html        String
    is_active   Int
    name        String
    updated_at  DateTime @db.Date
    url         String

    @@unique([url, business], map: "url_1_business_1")
}

model StockHistory {
    id String @id @default(auto()) @map("_id") @db.ObjectId
}

model StoragePlan {
    id String @id @default(auto()) @map("_id") @db.ObjectId
}

model SubscriptionHistory {
    id             String @id @default(auto()) @map("_id") @db.ObjectId
    /// Field referred in an index, but found no data to define the type.
    end_date       Json?
    /// Field referred in an index, but found no data to define the type.
    payment_status Json?
    /// Field referred in an index, but found no data to define the type.
    plan_id        Json?
    /// Field referred in an index, but found no data to define the type.
    start_date     Json?
    /// Field referred in an index, but found no data to define the type.
    user_id        Json?

    @@index([plan_id, user_id, start_date, end_date, payment_status], map: "plan_id_1_user_id_1_start_date_1_end_date_1_payment_status_1")
}

model SubscriptionPlans {
    id   String @id @default(auto()) @map("_id") @db.ObjectId
    /// Field referred in an index, but found no data to define the type.
    slug Json?  @unique(map: "slug_1")
}

model TempImages {
    id String @id @default(auto()) @map("_id") @db.ObjectId
}

model Terms {
    id String @id @default(auto()) @map("_id") @db.ObjectId
}

model Timesheet {
    id String @id @default(auto()) @map("_id") @db.ObjectId
}

model TimesheetLogs {
    id String @id @default(auto()) @map("_id") @db.ObjectId
}

model User {
    id                    String            @id @default(auto()) @map("_id") @db.ObjectId
    v                     Int               @map("__v")
    /// Could not determine type: the field only had null or empty values in the sample set.
    account_type          Json?
    billing_rate_number   Int
    business              String            @db.ObjectId
    created_at            DateTime          @db.Date
    /// Could not determine type: the field only had null or empty values in the sample set.
    deleted_at            Json?
    email                 String
    /// Could not determine type: the field only had null or empty values in the sample set.
    emergency_contact     Json?
    /// Could not determine type: the field only had null or empty values in the sample set.
    fcm                   Json?
    first_name            String
    /// Could not determine type: the field only had null or empty values in the sample set.
    forgot_password_token Json?
    /// Could not determine type: the field only had null or empty values in the sample set.
    gender                Json?
    is_active             Int
    is_custom             Boolean
    /// Could not determine type: the field only had null or empty values in the sample set.
    last_login            Json?
    last_name             String
    location              UserLocation
    notification          UserNotification_
    password              String
    profile_completed     Int
    /// Could not determine type: the field only had null or empty values in the sample set.
    profile_pic           Json?
    quickbook_status      Boolean
    role                  String            @db.ObjectId
    /// Could not determine type: the field only had null or empty values in the sample set.
    token                 Json?
    updated_at            DateTime          @db.Date

    @@index([first_name, last_name, email, role, is_active], map: "first_name_1_last_name_1_email_1_role_1_is_active_1")
}

model UserImages {
    id String @id @default(auto()) @map("_id") @db.ObjectId
}

model UserLogs {
    id String @id @default(auto()) @map("_id") @db.ObjectId
}

model UserNotification {
    id String @id @default(auto()) @map("_id") @db.ObjectId
}

model VendorSKUs {
    id String @id @default(auto()) @map("_id") @db.ObjectId
}

model WorkOrder {
    id      String @id @default(auto()) @map("_id") @db.ObjectId
    /// Field referred in an index, but found no data to define the type.
    wo_slug Json?  @unique(map: "wo_slug_1")
}

model WorkOrderColumns {
    id      String @id @default(auto()) @map("_id") @db.ObjectId
    /// Field referred in an index, but found no data to define the type.
    user_id Json?  @unique(map: "user_id_1")
}

model WorkOrderConsumable {
    id String @id @default(auto()) @map("_id") @db.ObjectId
}

model WorkOrderMaterial {
    id String @id @default(auto()) @map("_id") @db.ObjectId
}

model WorkOrderService {
    id String @id @default(auto()) @map("_id") @db.ObjectId
}

model WorkOrderTask {
    id String @id @default(auto()) @map("_id") @db.ObjectId
}

model WorkOrderType {
    id String @id @default(auto()) @map("_id") @db.ObjectId
}

model Yard {
    id String @id @default(auto()) @map("_id") @db.ObjectId
}

model YardLocation {
    id String @id @default(auto()) @map("_id") @db.ObjectId
}

model mySessions {
    id      String @id @default(auto()) @map("_id") @db.ObjectId
    /// Field referred in an index, but found no data to define the type.
    expires Json?

    @@index([expires], map: "expires_1")
}
